---
// --- FRONTMATTER ---
// Recibimos la lista de todos los Pokémon desde la página principal.
const { allPokemons } = Astro.props;
---

<!-- =================================================================== -->
<!-- === ESTRUCTURA HTML (La parte visual de nuestro componente) === -->
<!-- =================================================================== -->

<!-- Contenedor principal de la Pokédex -->
<div id="pokedex-container">
  <div class="search-bar">
    <input type="text" id="search-input" placeholder="Buscar Pokémon por nombre...">
  </div>

  <div id="loader" class="loader">
    <div class="pokeball"></div>
  </div>

  <div id="pokedex-grid" class="pokedex-grid"></div>

  <div class="pagination">
    <button id="prev-button">Anterior</button>
    <span id="page-info"></span>
    <button id="next-button">Siguiente</button>
  </div>
</div>

<!-- Estructura del Modal (inicialmente oculta) -->
<div id="modal-overlay" class="modal-overlay">
  <!-- El contenido de este modal se generará dinámicamente con JavaScript -->
</div>

<!-- =================================================================== -->
<!-- === ESTILOS (El diseño de nuestro componente) === -->
<!-- =================================================================== -->
<style>
  /* --- Estilos Generales del Componente --- */
  .search-bar { text-align: center; margin: 1rem 0 2rem; }
  #search-input { width: 90%; max-width: 400px; padding: 0.75rem; border-radius: 2rem; border: 1px solid #555; background-color: #444; color: white; font-size: 1rem; text-align: center; }
  #search-input::placeholder { color: #aaa; }

  .pokedex-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    padding: 1rem;
    justify-content: center;
  }

  .pagination { display: flex; justify-content: center; align-items: center; gap: 1rem; margin: 2rem 0; }
  .pagination button { background-color: #4a4a4a; border: 1px solid #666; color: white; padding: 0.5rem 1rem; border-radius: 8px; cursor: pointer; }
  .pagination button:disabled { background-color: #333; color: #777; cursor: not-allowed; }

  /* --- Estilos del Loader de Pokébola --- */
  .loader { display: none; justify-content: center; align-items: center; padding: 3rem; width: 100%; }
  .pokeball { width: 60px; height: 60px; background-color: #fff; border-radius: 50%; position: relative; border: 3px solid #333; animation: shake 1.2s cubic-bezier(.36,.07,.19,.97) infinite; }
  .pokeball:before, .pokeball:after { content: ""; position: absolute; }
  .pokeball:before { background-color: #f00; width: 100%; height: 50%; border-radius: 30px 30px 0 0; }
  .pokeball:after { top: calc(50% - 7px); left: calc(50% - 7px); width: 14px; height: 14px; background: #fff; border-radius: 50%; border: 3px solid #333; z-index: 1; }
  @keyframes shake { 0%, 100% { transform: rotate(0); } 50% { transform: rotate(360deg); } }

  /* --- Estilos del Modal (Versión Final y Robusta) --- */
  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    padding: 1rem;
  }
  .modal-window {
    display: flex;
    flex-direction: column;
    width: 100%;
    max-width: 380px;
    height: 85vh;
    max-height: 580px;
    background-color: #ffffff;
    border-radius: 16px;
    box-shadow: 0 10px 25px rgba(0,0,0,0.2);
    overflow: hidden;
    color: #333;
  }
  .modal-close {
    position: absolute;
    top: 8px;
    right: 8px;
    width: 32px;
    height: 32px;
    background: rgba(0, 0, 0, 0.1);
    border: none;
    border-radius: 50%;
    color: white;
    font-size: 16px;
    line-height: 32px;
    cursor: pointer;
    z-index: 20;
  }
  .modal-header {
    position: relative;
    text-align: center;
    padding: 1.5rem 1rem 1rem;
    flex-shrink: 0;
  }
  .modal-pokemon-image {
    width: 100%;
    max-width: 180px;
    height: 180px;
    object-fit: contain;
    margin: 0 auto;
    display: block;
    filter: drop-shadow(0 4px 8px rgba(0,0,0,0.2));
  }
  .modal-body {
    padding: 0 1.5rem 1.5rem;
    flex-grow: 1;
    overflow-y: auto;
    min-height: 0;
  }
  .pokemon-name { text-transform: capitalize; font-size: 1.75rem; text-align: center; margin: 0 0 0.5rem; }
  .pokemon-id { color: #888; font-size: 1.2rem; }
  .types-container { display: flex; justify-content: center; gap: 0.5rem; margin-bottom: 1rem; }
  .type-tag { padding: 0.25rem 0.75rem; border-radius: 1rem; color: white; text-transform: uppercase; font-size: 0.75rem; font-weight: bold; }
  .info-section { margin-bottom: 1rem; }
  .info-section h3 { margin: 0 0 0.5rem; font-size: 1rem; text-align: center; border-bottom: 1px solid #eee; padding-bottom: 0.5rem; font-weight: bold; color: #555; }
  .info-section p { margin: 0; text-transform: capitalize; text-align: center; font-size: 0.9rem; }
  .physical-info { display: flex; justify-content: space-around; text-align: center; }
  .stats-list { list-style: none; padding: 0; font-size: 0.9rem; }
  .stats-list li { display: grid; grid-template-columns: 100px 35px 1fr; align-items: center; gap: 0.5rem; margin-bottom: 0.5rem; text-transform: capitalize; }
  .stat-name { font-weight: 600; }
  .stat-value { font-weight: bold; text-align: right; }
  .stat-bar-container { width: 100%; background-color: #e0e0e0; border-radius: 5px; height: 8px; }
  .stat-bar { height: 100%; background-color: #3b82f6; border-radius: 5px; }

  /* Colores dinámicos para el header y las etiquetas */
  .grass { background-color: #78C850; }
  .fire { background-color: #F08030; }
  .water { background-color: #6890F0; }
  .bug { background-color: #A8B820; }
  .normal { background-color: #A8A878; }
  .poison { background-color: #A040A0; }
  .electric { background-color: #F8D030; }
  .ground { background-color: #E0C068; }
  .fairy { background-color: #EE99AC; }
  .fighting { background-color: #C03028; }
  .psychic { background-color: #F85888; }
  .rock { background-color: #B8A038; }
  .ghost { background-color: #705898; }
  .ice { background-color: #98D8D8; }
  .dragon { background-color: #7038F8; }
  .steel { background-color: #B8B8D0; }
  .dark { background-color: #705848; }
  .flying { background-color: #A890F0; }
</style>

<!-- =================================================================== -->
<!-- === SCRIPT (La lógica interactiva de nuestro componente) === -->
<!-- =================================================================== -->
<script define:vars={{ allPokemons }}>
  // --- OBTENER ELEMENTOS DEL DOM ---
  const searchInput = document.getElementById('search-input');
  const grid = document.getElementById('pokedex-grid');
  const loader = document.getElementById('loader');
  const prevButton = document.getElementById('prev-button');
  const nextButton = document.getElementById('next-button');
  const pageInfo = document.getElementById('page-info');
  const modalOverlay = document.getElementById('modal-overlay');

  // --- ESTADO DE LA APP ---
  let currentPage = 1;
  const itemsPerPage = 12;
  let currentFilter = '';
  let debounceTimer;

  // --- FUNCIONES PRINCIPALES ---

  // Renderiza la grilla de Pokémon
  function render() {
    const filteredPokemons = allPokemons.filter(p => p.name.toLowerCase().includes(currentFilter));
    const start = (currentPage - 1) * itemsPerPage;
    const end = start + itemsPerPage;
    const paginatedPokemons = filteredPokemons.slice(start, end);

    grid.innerHTML = '';
    loader.style.display = 'none';
      
    if (paginatedPokemons.length === 0) {
      grid.innerHTML = '<p>No se encontraron Pokémon.</p>';
    } else {
      paginatedPokemons.forEach(pokemon => {
        const id = pokemon.url.split('/')[6];
        const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;
        grid.innerHTML += `
          <a href="/pokemon/${id}" class="pokemon-card">
            <img src="${imageUrl}" alt="Imagen de ${pokemon.name}" loading="lazy" />
            <h2>${pokemon.name}</h2>
          </a>`;
      });
    }

    const totalPages = Math.ceil(filteredPokemons.length / itemsPerPage);
    pageInfo.textContent = `Página ${currentPage} de ${totalPages || 1}`;
    prevButton.disabled = currentPage === 1;
    nextButton.disabled = currentPage === totalPages || totalPages === 0;
  }

  // Obtiene datos y muestra el modal con detalles del Pokémon
  // --- DENTRO DEL <script> EN PokedexGrid.astro ---

// Reemplaza esta función completa:
async function showPokemonDetails(id) {
  modalOverlay.style.display = 'flex';
  modalOverlay.innerHTML = '<div class="loader"><div class="pokeball"></div></div>'; // Muestra el loader

  try {
    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);
    if (!response.ok) throw new Error('No se pudo cargar la información.');
    const pokemon = await response.json();

    // === ESTA ES LA PARTE CORREGIDA ===
    // Ahora el HTML que generamos NO incluye la ventana principal,
    // solo el contenido que va DENTRO del .modal-window.
    const types = pokemon.types.map(t => `<span class="type-tag ${t.type.name}">${t.type.name}</span>`).join('');
    const abilities = pokemon.abilities.map(a => a.ability.name.replace('-', ' ')).join(', ');
    const mainType = pokemon.types[0].type.name;

    const modalContentHTML = `
      <div class="modal-header ${mainType}">
        <img src="${pokemon.sprites.other['official-artwork'].front_default}" alt="${pokemon.name}" class="modal-pokemon-image">
      </div>
      <div class="modal-body">
        <h2 class="pokemon-name">${pokemon.name} <span class="pokemon-id">#${String(pokemon.id).padStart(3, '0')}</span></h2>
        <div class="types-container">${types}</div>
        <div class="info-section">
          <h3>Abilities</h3><p>${abilities}</p>
        </div>
        <div class="info-section">
          <h3>Physical</h3>
          <div class="physical-info">
            <div><span>Height</span><p>${pokemon.height / 10} m</p></div>
            <div><span>Weight</span><p>${pokemon.weight / 10} kg</p></div>
          </div>
        </div>
        <div class="info-section">
          <h3>Base Stats</h3>
          <ul class="stats-list">
            ${pokemon.stats.map(s => `
              <li>
                <span class="stat-name">${s.stat.name.replace('-', ' ')}</span>
                <span class="stat-value">${s.base_stat}</span>
                <div class="stat-bar-container"><div class="stat-bar" style="width: ${Math.min(s.base_stat, 100)}%;"></div></div>
              </li>
            `).join('')}
          </ul>
        </div>
      </div>
    `;

    // Reconstruimos la estructura completa del modal
    modalOverlay.innerHTML = `
      <div class="modal-window">
        <button id="modal-close" class="modal-close">×</button>
        ${modalContentHTML} 
      </div>
    `;

  } catch (error) {
    modalOverlay.innerHTML = `<div class="modal-window"><p style="text-align:center; padding: 2rem;">Error: ${error.message}</p></div>`;
  }
}

  // --- EVENT LISTENERS ---

  searchInput.addEventListener('input', (e) => {
    clearTimeout(debounceTimer);
    grid.innerHTML = '';
    loader.style.display = 'flex';
    debounceTimer = setTimeout(() => {
      currentFilter = e.target.value.toLowerCase();
      currentPage = 1;
      render();
    }, 500);
  });

  prevButton.addEventListener('click', () => { if (currentPage > 1) { currentPage--; render(); } });
  nextButton.addEventListener('click', () => { currentPage++; render(); });

  grid.addEventListener('click', (e) => {
    const card = e.target.closest('.pokemon-card');
    if (card) {
      e.preventDefault();
      const id = card.getAttribute('href').split('/')[2];
      showPokemonDetails(id);
    }
  });

  // Delegación de eventos para cerrar el modal
  modalOverlay.addEventListener('click', (e) => {
    if (e.target === modalOverlay || e.target.closest('#modal-close')) {
      modalOverlay.style.display = 'none';
    }
  });

  // --- INICIO ---
  render();
</script>